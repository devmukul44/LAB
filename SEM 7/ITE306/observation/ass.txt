ASSIGNMENT:

SET 6

2.
 CLR 13H
HERE: SJMP HERE

3.
 MOV A,P0
CPL A
MOV P1,A
HERE: SJMP HERE



SET 8
3. MOV 20H,R0
MOV C,06H
MOV P3.3,C
HERE: SJMP HERE
SET 7

2. MOV 20H,30H
MOV C,04H
MOV ACC.2,C
HERE: SJMP HERE

3. MOV R0,A
XOR A,#FFH
XOR A,R0


SET1
1.	ORG 0000H
MOV 25H, #0F0H
MOV 26H, #0FH
MOV 27H, #01H
MOV 30H, #00H
MOV 31H, #00H
MOV A, 25H
ADD A, 26H
JNC NEXT
INC 30H
NEXT: ADD A, 27H
MOV 31H,A
JNC STOP
INC 30H
STOP: AJMP STOP 

2.	MOV DPTR,#1132H
MOV A,#0ABH
INCRE: INC DPH
CJNE A,DPH,INCRE
MOV A,#0CDH
INCRES: INC DPL
CJNE A,DPL,INCRES
END

3.	MOV DPTR,#0DDFFH
MOV A,#00H
DECRE: DEC DPH
CJNE A,DPH,DECRE
MOV A,#033H
DECRES: DEC DPL
CJNE A,DPL,DECRES
END

SET2:

1.
MOV 22H,#11H
MOV 15H,#0FH
MOV A,22H
MOV B,15H
MUL AB
MOV 1AH,B
MOV 19H,A

2.
MOV 2AH,#55H
CPL 50H
CPL 51H
CPL 52H
CPL 53H
MOV A,2AH


SET3

1.
MOV 13H,#008H
MOV 14H,#015H
MOV A,13H
MOV B,14H
DIV AB
MOV 13H,A
MOV B,#00H
MOV A,#00H
MOV A,13H
MOV B,14H
MUL AB
MOV 13H,A

2.
MAIN: LCALL SUB
RET
SUB: PUSH 22H
RET

SET4
1.
MOV 13H,#05H 
MOV A,13H
MOV 2BH,#03H
SUBB A,2BH
MOV 3CH,A



**********************************************
sharma codes:
SET1q3
MOV R0,DPL
MOV R1,DPH
AGAIN: CJNE R1,#00H,SKIP
CJNE R0,#33H,SKIP
SJMP XYZ
SKIP: DEC R0
MOV A,R0
JNZ ABC
DEC R1
ABC: SJMP AGAIN
XYZ: MOV DPL,R0
     MOV DPH,R1
HERE: SJMP HERE


set2q1
mov 15h,#40 ; test value 1 in address 15h
mov 22h,#7 ; test value 2 in address 22h
mov A,15h ; copy test value 1 to A
mov B,22h ; copy test value 2 to B
mul AB ; multiply A with B
mov 19h,A ; copy LSB of result to address 19h
mov 1Ah,B ; copy MSB of result to 1Ah
end 

*********************************************
CS2 codes

Q1:
#include<Intel\8051.h>
unsigned char input1;
unsigned char input2;
unsigned char result;
void main()
{
while(1)
{
input1=P1;
input2=P0;
result=input1 & input2;
P2=result;
}}

Q2:
#include<Intel\8051.h>
BIT input1 P0.0
BIT input2 P1.3
BIT output P2.0

void main()
{

while(1)
{
output=input1 & input2;
}
}

Q3:
#include<Intel\8051.h>
unsigned char a;
unsigned char b=0x00;
unsigned char c=0xFF;
void main()
{ a=P1;
if(a!=20)
P3=b;
else
P2=c;
}


Q4:
HEX DATA TO PORT 0

#include<Intel\8051.h>
void main()
{
unsigned char a;
a=0x0c;
P0=a;
}

Q5:
#include<Intel\8051.h>
#include<standard.h>
#define period 100
void main()
{
unsigned char x;
P1=0x01;
while(1)
{
for(x=0;x<8;x++)
{ P1=P1<<1;
delay_ms(period);
}}}


Q6:
ASCII charcters p1
#include<Intel\8051.h>
const unsigned char input[4]={'A','@','!','*'};
void main()
{
P0=input[0];
P1=input[1];
P2=input[2];
P3=input[3];
}

Q7.toggle alternate
#include<Intel\8051.h>
#include<standard.h>
#define period 100
void main()
{
while(1)
{
P1=0x55;
delay_ms(period);
P1=0xAA;
delay_ms(period);
}}

Q8:toggle lsb port0
C CODE:
#include<Intel\8051.h>
#include<standard.h>
#define period 100
BIT displ P0.0
void main()
{
while(1)
{
displ=1;
delay_ms(period);
displ=0;
delay_ms(period);
}}

Q9:
toggle MSBport1
#include <Intel\8051.h>
#include<standard.h>
#define period 100
BIT displ P1.7
void main()
{
while(1)
{
displ=1;
delay_ms(period);
displ=0;
delay_ms(period);
}
}