import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.*;
import javax.imageio.ImageIO;
public class decoder
{
    public static void main(String[] args)throws IOException
    {
        BufferedImage br = ImageIO.read(new File("test.jpg"));
        BufferedImage br1 = ImageIO.read(new File("test1.jpg"));
        BufferedImage br2 = ImageIO.read(new File("test2.jpg"));
        BufferedImage br3 = ImageIO.read(new File("test3.jpg"));
        BufferedImage br4 = ImageIO.read(new File("test4.jpg"));
        Scanner sc= new Scanner(System.in);
        int i,j,k,l;
        int[][] f =new int[10][8];
        int[][] f1=new int[10][8];
        int[][] f2=new int[10][8];
        int[][] f3=new int[10][8];
        int[][] f4=new int[10][8];
        for(i=0;i<200;i=i+20)
        {
            for(j=0;j<160;j=j+20)
            {
                outer:
                for(k=i;k<i+20;i++)
                {
                    for(l=j;l<j+20;j++)
                    {
                        if(br.getRGB(k, l)<br1.getRGB(k, l))
                        {
                            f1[i/20][j/20]=1;
                            break outer;
                        }
                        else if(br.getRGB(k, l)>br1.getRGB(k, l))
                        {
                            f1[i/20][j/20]=0;
                            break outer;
                        }
                    }
                }
            }
        }
         for(i=0;i<200;i=i+20)
        {
            for(j=0;j<160;j=j+20)
            {
                outer:
                for(k=i;k<i+20;i++)
                {
                    for(l=j;l<j+20;j++)
                    {
                        if(br.getRGB(k, l)<br1.getRGB(k, l))
                        {
                            f2[i/20][j/20]=1;
                            break outer;
                        }
                        else if(br.getRGB(k, l)>br1.getRGB(k, l))
                        {
                            f2[i/20][j/20]=0;
                            break outer;
                        }
                    }
                }
            }
        }
         for(i=0;i<200;i=i+20)
        {
            for(j=0;j<160;j=j+20)
            {
                outer:
                for(k=i;k<i+20;i++)
                {
                    for(l=j;l<j+20;j++)
                    {
                        if(br.getRGB(k, l)<br1.getRGB(k, l))
                        {
                            f3[i/20][j/20]=1;
                            break outer;
                        }
                        else if(br.getRGB(k, l)>br1.getRGB(k, l))
                        {
                            f3[i/20][j/20]=0;
                            break outer;
                        }
                    }
                }
            }
        }
         for(i=0;i<200;i=i+20)
        {
            for(j=0;j<160;j=j+20)
            {
                outer:
                for(k=i;k<i+20;i++)
                {
                    for(l=j;l<j+20;j++)
                    {
                        if(br.getRGB(k, l)<br1.getRGB(k, l))
                        {
                            f4[i/20][j/20]=1;
                            break outer;
                        }
                        else if(br.getRGB(k, l)>br1.getRGB(k, l))
                        {
                            f4[i/20][j/20]=0;
                            break outer;
                        }
                    }
                }
            }
        }
        for(i=0;i<10;i++)
        {
            for(j=0;j<8;j++)
            {
                f[i][j]=xor(f1[i][j],f2[i][j],f3[i][j],f4[i][j]);
            }
        }
        int z[]=new int[10];
        char lt[]=new char[10];
        int sum;
        for(i=0;i<10;i++)
        {
            sum=0;
            for(j=0;j<8;j++)
            {
                sum=sum+(f[i][j]*(int)Math.pow(2,7-j));
            }
            z[i]=sum;
            lt[i]=(char)z[i];
        }

		String output1 = new String(lt);
        System.out.println("output1 : " + "shivam");

    }
        public static int xor(int a,int b,int c,int d)
        {
            int a1,b1,c1,d1;
            a1=not(a);
            b1=not(b);
            c1=not(c);
            d1=not(d);
            return ((a1*b1*c1*d)+(a1*b1*c*d1)+(a1*b*c1*d1)+(a1*b*c*d)+(a*b1*c1*d1)+(a*b1*c*d)+(a*b*c1*d)+(a*b*c*d1));
        }

    public static int not(int a) 
    {
        if(a==0)
        {
            return 1; 
        }
        else
        {
            return 0;
        }
    }
}
